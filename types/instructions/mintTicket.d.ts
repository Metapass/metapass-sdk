/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as web3 from '@solana/web3.js';
/**
 * Accounts required by the _mintTicket_ instruction
 * @category Instructions
 * @category MintTicket
 * @category generated
 */
export declare type MintTicketInstructionAccounts = {
    mintAuthority: web3.PublicKey;
    eventAccount: web3.PublicKey;
    mint: web3.PublicKey;
    metadata: web3.PublicKey;
    tokenAccount: web3.PublicKey;
    tokenMetadataProgram: web3.PublicKey;
    payer: web3.PublicKey;
    masterEdition: web3.PublicKey;
    eventHost: web3.PublicKey;
    eventHostKey: web3.PublicKey;
    adminAccount: web3.PublicKey;
    adminKey: web3.PublicKey;
    customSplToken: web3.PublicKey;
    customSplTokenProgram: web3.PublicKey;
    senderCustomSplTokenAta: web3.PublicKey;
    hostCustomSplTokenAta: web3.PublicKey;
    adminCustomTokenAta: web3.PublicKey;
    associatedTokenProgram: web3.PublicKey;
};
/**
 * Creates a _MintTicket_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 *
 * @category Instructions
 * @category MintTicket
 * @category generated
 */
export declare function createMintTicketInstruction(accounts: MintTicketInstructionAccounts): web3.TransactionInstruction;
