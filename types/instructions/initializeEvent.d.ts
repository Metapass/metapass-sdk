/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as web3 from '@solana/web3.js';
import { CreateEventInput } from '../types/CreateEventInput';
/**
 * @category Instructions
 * @category InitializeEvent
 * @category generated
 */
export declare type InitializeEventInstructionArgs = {
    createEventInfo: CreateEventInput;
};
/**
 * Accounts required by the _initializeEvent_ instruction
 * @category Instructions
 * @category InitializeEvent
 * @category generated
 */
export declare type InitializeEventInstructionAccounts = {
    eventAccount: web3.PublicKey;
    authority: web3.PublicKey;
    eventHostAccount: web3.PublicKey;
};
/**
 * Creates a _InitializeEvent_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category InitializeEvent
 * @category generated
 */
export declare function createInitializeEventInstruction(accounts: InitializeEventInstructionAccounts, args: InitializeEventInstructionArgs): web3.TransactionInstruction;
